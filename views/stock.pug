doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Asset Management System
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
    link(rel="stylesheet", href="https://cdn.datatables.net/1.10.23/css/dataTables.bootstrap4.min.css")
    link(rel="stylesheet", href="/styles/style.css")

  body
    nav.navbar.navbar-expand-lg.navbar-light.bg-light
      .container
        a.navbar-brand(href="#") Asset Management System

        ul.navbar-nav.ml-auto
          li.nav-item
            a.nav-link(href="/employees") Employee Master
          li.nav-item
            a.nav-link(href="/assets") Asset Master
          li.nav-item
            a.nav-link(href="/assetCategories") Asset Category Master
          li.nav-item
            a.nav-link(href="/stocks") Stock View
          li.nav-item
            a.nav-link(href="/issueAsset") Issue Asset
          li.nav-item
            a.nav-link(href="/returnAsset") Return Asset
          li.nav-item
            a.nav-link(href="/scrappedAsset") Scrap Asset
          li.nav-item
            a.nav-link(href="/assetHistory") Asset History

    .container.mt-3
      section#stock-view.mb-5
        h2.mb-3 Stock View

        //- Add Stock Asset Form
        form#add-stock-asset-form(add="javascript:void(0)")
          .form-row
            .form-group.col-md-3
              input#name.form-control(type="text", name="name", placeholder="Name", required)
            .form-group.col-md-3
              input#branch.form-control(type="text", name="branch", placeholder="Branch", required)
            .form-group.col-md-2
              input#quantity.form-control(type="number", name="quantity", placeholder="Quantity", min="0", required)
            .form-group.col-md-2
              input#unitPrice.form-control(type="number", name="unitPrice", placeholder="Unit Price", min="0", step="0.01", required)
            .form-group.col-md-2
              button.btn.btn-success(type="button", onclick="addStockAsset()") Add

        //- Stock Table
        .stock-table-container
          table#stock-table.table.table-striped.table-bordered(data-toggle="dataTable", width="100%", cellspacing="0")
            thead
              tr
                th Name
                th Branch
                th Quantity
                th Unit Price
                th Total Value
                th Actions
            tbody
              //- Loop through stock assets and populate table rows
              each asset in stockAssets
                tr
                  td= asset.name
                  td= asset.branch
                  td= asset.quantity
                  td= asset.unitPrice
                  td= asset.quantity * asset.unitPrice
                  td
                    //- Edit Stock Asset Button
                    button.btn.btn-sm.btn-primary.edit-stock-asset-button(data-id=asset.id, onclick="editStockAsset(this)") Edit
                    //- Delete Stock Asset Button
                    button.btn.btn-sm.btn-danger.delete-stock-asset-button(data-id=asset.id, onclick="deleteStockAsset(this)") Delete

    script(src="https://code.jquery.com/jquery-3.5.1.min.js")
    script(src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js")
    script(src="https://cdn.datatables.net/1.10.23/js/dataTables.bootstrap4.min.js")
    script.
      $(document).ready(function() {
        // DataTable initialization
        $('#stock-table').DataTable();

        // Function to add a stock asset
        window.addStockAsset = function() {
          var formData = {
            name: $('#name').val(),
            branch: $('#branch').val(),
            quantity: $('#quantity').val(),
            unitPrice: $('#unitPrice').val()
          };
          $.ajax({
            url: '/stocks',
            method: 'POST',
            data: formData,
            success: function(response) {
              // Display success alert using SweetAlert
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Stock asset added successfully!'
              }).then(() => {
                window.location.reload(); // Reload page after adding stock asset
              });
            },
            error: function(error) {
              // Display error alert using SweetAlert
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to add stock asset. Please try again later.'
              });
              console.error(error);
            }
          });
        };

        // Function to edit a stock asset
        window.editStockAsset = function(button) {
          // Similar to addStockAsset function, implement SweetAlert for success and error messages
          var assetId = $(button).data('id');
          var formData = {
            name: prompt("Enter new name:", ""),
            branch: prompt("Enter new branch:", ""),
            quantity: parseInt(prompt("Enter new quantity:", "")),
            unitPrice: parseFloat(prompt("Enter new unit price:", ""))
          };
          $.ajax({
            url: `/stocks/${assetId}`,
            method: 'PUT',
            data: formData,
            success: function(response) {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Stock asset updated successfully!'
              }).then(() => {
                window.location.reload(); // Reload page after updating stock asset
              });
            },
            error: function(error) {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to update stock asset. Please try again later.'
              });
              console.error(error);
            }
          });
        };

        // Function to delete a stock asset
        window.deleteStockAsset = function(button) {
          // Similar to addStockAsset function, implement SweetAlert for success and error messages
          var assetId = $(button).data('id');
          $.ajax({
            url: `/stocks/${assetId}`,
            method: 'DELETE',
            success: function(response) {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Stock asset deleted successfully!'
              }).then(() => {
                window.location.reload(); // Reload page after deleting stock asset
              });
            },
            error: function(error) {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to delete stock asset. Please try again later.'
              });
              console.error(error);
            }
          });
        };
      });
