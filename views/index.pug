doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Asset Management System
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
    link(rel="stylesheet", href="https://cdn.datatables.net/1.10.23/css/dataTables.bootstrap4.min.css")
    link(rel="stylesheet", href="/styles/style.css")
    style.
      /* Custom Styles */
      .container {
        max-width: 800px; /* Adjust container width as needed */
      }
      .add-employee-form {
        margin-bottom: 20px; /* Add margin below the form */
      }
      .employee-table-container {
        margin-top: 20px; /* Add margin above the table */
      }

  body
    nav.navbar.navbar-expand-lg.navbar-light.bg-light
      .container
        a.navbar-brand(href="#") Asset Management System

    .container.mt-3
      //- Employee Master
      section#employee-master.mb-5
        h2.mb-3 Employee Master

        //- Add Employee Form
        form#add-employee-form.add-employee-form(action="/employees", method="POST")
          .form-row
            .form-group.col-md-6
              label(for="name") Name:
              input#name.form-control(type="text", name="name", required)
            .form-group.col-md-6
              label(for="email") Email:
              input#email.form-control(type="email", name="email", required)
          .form-row
            .form-group.col-md-6
              label(for="active") Active:
              select#active.form-control(name="active", required)
                option(value="true") Yes
                option(value="false") No
            .form-group.col-md-6
              button.btn.btn-primary(type="submit") Add Employee

        //- Employee Table
        .employee-table-container
          table#employee-table.table.table-striped.table-bordered(data-toggle="dataTable", width="100%", cellspacing="0")
            thead
              tr
                th Name
                th Email
                th Active
                th Actions
            tbody
              //- Loop through employees and populate table rows
              each employee in employees
                tr
                  td= employee.name
                  td= employee.email
                  td= employee.active ? 'Yes' : 'No'
                  td
                    //- Edit Employee Button
                    button.btn.btn-sm.btn-primary.edit-employee-button(data-id=employee.id, onclick=`editEmployee(${employee.id})`) Edit
                    //- Delete Employee Button
                    button.btn.btn-sm.btn-danger.delete-employee-button(data-id=employee.id, onclick=`deleteEmployee(${employee.id})`) Delete

    script(src="https://code.jquery.com/jquery-3.5.1.min.js")
    script(src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js")
    script(src="https://cdn.datatables.net/1.10.23/js/dataTables.bootstrap4.min.js")
    script.
      $(document).ready(function() {
        // DataTable initialization
        $('#employee-table').DataTable();
        

        // Add Employee form submission
        $('#add-employee-form').submit(function(event) {
          event.preventDefault();
          var formData = $(this).serialize();
          $.ajax({
            url: '/employees',
            method: 'POST',
            data: formData,
            success: function(response) {
              console.log("Success");
              window.location.reload(); // Reload the entire page after adding employee
              // Reload page or update table with new data
            },
            error: function(error) {
              console.error(error);
              // Handle error
            }
          });
        });
      });

    //- Function to handle editing an employee
    script.
      function editEmployee(employeeId) {
        // Implement functionality to fetch employee data and populate edit form
        console.log("Editing employee with ID:", employeeId);
      }

    //- Function to handle deleting an employee
    script.
     function deleteEmployee(employeeId) {
        console.log("Deleting employee with ID:", employeeId);
        // Implement functionality to delete employee
        $.ajax({
          url: `/employees/${employeeId}`,
          method: 'DELETE',
          data: { _method: 'DELETE' },
          success: function(response) {
            console.log("Employee deleted successfully");
            window.location.reload(); // Reload page after deleting employee
          },
          error: function(error) {
            console.error(error);
            // Handle error
          }
        });
      }